h1. Getting Started

h2.  Installing Buildr

More information about "downloading and installing
Buildr":http://incubator.apache.org/buildr/downloading.html.


h2. Conventions

Lines that start with @$@ are command lines, for example:

{{{!sh
$ # Run Buildr
$ buildr
}}}

Lines that start with @=>@ show output from the console or the result of a
method, for example:

{{{!sh
puts 'Hello world'
=> "Hello world"
}}}

And as you guessed, everything else is Buildfile Ruby or Java code.  You can
figure out which language is which.



h2. Running Buildr

You need a *Buildfile*, a build script that tells Buildr all about the projects
it's building, what they contain, what to produce, and so on.  The Buildfile
resides in the root directory of your project.  We'll talk more about it in
"the next chapter":projects.html.  If you don't already have one, ask Buildr to
create it[1]:

{{{!sh
$ buildr
}}}

You use Buildr by running the @buildr@ command:

{{{!sh
buildr [-f buildfile] {options} targets...
}}}

There are several options you can use, for a full list of options type:

{{{!sh
buildr --help
}}}

Once you have a Buildfile ready, you can find out even more information by
running the _help_ task:

{{{!sh
buildr help
}}}


h2. More Info

*API* The "Buildr API":http://incubator.apache.org/buildr/rdoc/index.html documentation.

*Rake* Buildr is based on Rake, a Ruby build system that handles tasks and dependencies.  Check out the "Rake documentation":http://docs.rubyrake.org/ for more information.

*AntWrap* Buildr uses AntWrap, for configuring and running Ant tasks.  You can learn more from the "Antwrap documentation":http://antwrap.rubyforge.org/.


fn1. You'll notice that Buildr creates a file called @buildfile@.  It's case sensitive, but Buildr will look for either @buildfile@ or @Buildfile@.  You can also use @Rakefile@ or @rakefile@ for compatibility with previous versions of Buildr.
